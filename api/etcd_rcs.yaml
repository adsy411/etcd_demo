---
apiVersion: v1
kind: ReplicationController
metadata:
  name: etcd1
  namespace: demo2
  labels:
    kubernetes.io/cluster-service: "true"
    name: etcd1
    app: etcd
spec:
  replicas: 1
  selector:
    name: etcd1
  template:
    metadata:
      labels:
        name: etcd1
        kubernetes.io/cluster-service: "true"
        app: etcd
    spec:
      containers:
      - name: etcd1
        image: mikesplain/etcd_demo:api
        imagePullPolicy: Always
        ports:
        - containerPort: 2379
          name: client1
          protocol: TCP
        - containerPort: 2380
          name: peer
          protocol: TCP
        - containerPort: 4001
          name: client2
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
        env:
        - name: NAME
          value: etcd1
        - name: OTHER_HOSTS
          value: etcd2,etcd3
        - name: INITIAL_CLUSTER_STATE
          valueFrom:
            configMapKeyRef:
              name: etcd1
              key: initialclusterstate
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/etcdctl
            - ls
            - /
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - /usr/local/bin/etcdctl
            - --no-sync
            - ls
            - /
          initialDelaySeconds: 10
          timeoutSeconds: 5
---

apiVersion: v1
kind: ReplicationController
metadata:
  name: etcd2
  namespace: demo2
  labels:
    kubernetes.io/cluster-service: "true"
    name: etcd2
    app: etcd
spec:
  replicas: 1
  selector:
    name: etcd2
  template:
    metadata:
      labels:
        name: etcd2
        kubernetes.io/cluster-service: "true"
        app: etcd
    spec:
      containers:
      - name: etcd2
        image: mikesplain/etcd_demo:api
        imagePullPolicy: Always
        ports:
        - containerPort: 2379
          name: client1
          protocol: TCP
        - containerPort: 2380
          name: peer
          protocol: TCP
        - containerPort: 4001
          name: client2
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
        env:
        - name: NAME
          value: etcd2
        - name: OTHER_HOSTS
          value: etcd1,etcd3
        - name: INITIAL_CLUSTER_STATE
          valueFrom:
            configMapKeyRef:
              name: etcd2
              key: initialclusterstate
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/etcdctl
            - ls
            - /
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - /usr/local/bin/etcdctl
            - --no-sync
            - ls
            - /
          initialDelaySeconds: 10
          timeoutSeconds: 5
---

apiVersion: v1
kind: ReplicationController
metadata:
  name: etcd3
  namespace: demo2
  labels:
    kubernetes.io/cluster-service: "true"
    name: etcd3
    app: etcd
spec:
  replicas: 1
  selector:
    name: etcd3
  template:
    metadata:
      labels:
        name: etcd3
        kubernetes.io/cluster-service: "true"
        app: etcd
    spec:
      containers:
      - name: etcd3
        image: mikesplain/etcd_demo:api
        imagePullPolicy: Always
        ports:
        - containerPort: 2379
          name: client1
          protocol: TCP
        - containerPort: 2380
          name: peer
          protocol: TCP
        - containerPort: 4001
          name: client2
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
        env:
        - name: NAME
          value: etcd3
        - name: OTHER_HOSTS
          value: etcd1,etcd2
        - name: INITIAL_CLUSTER_STATE
          valueFrom:
            configMapKeyRef:
              name: etcd3
              key: initialclusterstate
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/etcdctl
            - ls
            - /
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - /usr/local/bin/etcdctl
            - --no-sync
            - ls
            - /
          initialDelaySeconds: 10
          timeoutSeconds: 5
